#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define S_WIDTH 128
#define S_HEIGHT 32

#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32

Adafruit_SSD1306 display(S_WIDTH, S_HEIGHT, &Wire, -1);

const unsigned char myFaceMap[] PROGMEM = {
	0x00, 0x00, 0x4d, 0xdd, 0xdd, 0xb6, 0x80, 0x00, 0x00, 0x00, 0x0a, 0xaa, 0x95, 0x55, 0x24, 0x92, 
	0x00, 0x04, 0x02, 0xb6, 0xb6, 0xda, 0x48, 0x00, 0x00, 0x11, 0x21, 0x24, 0xa8, 0x88, 0x92, 0x49, 
	0x24, 0x91, 0x24, 0x5b, 0xdb, 0x68, 0x01, 0x24, 0x92, 0x40, 0x00, 0x52, 0xa6, 0x66, 0xaa, 0xaa, 
	0x00, 0x00, 0x0a, 0x8d, 0x6d, 0xb2, 0x20, 0x00, 0x00, 0x04, 0x04, 0x15, 0x29, 0x20, 0xa4, 0x00, 
	0x00, 0x44, 0x60, 0x2e, 0xdb, 0x50, 0x84, 0x92, 0x49, 0x10, 0x90, 0x8a, 0xa5, 0x40, 0x90, 0x00, 
	0x92, 0x00, 0x0a, 0x15, 0xb6, 0xc0, 0x00, 0x00, 0x00, 0x42, 0x02, 0x21, 0x55, 0x54, 0x55, 0x10, 
	0x00, 0x12, 0x75, 0x5b, 0x7b, 0xa9, 0x2a, 0xa9, 0x4a, 0x08, 0xa8, 0x80, 0x55, 0x50, 0xaa, 0x00, 
	0x02, 0x40, 0x00, 0xae, 0xd6, 0x80, 0x40, 0x00, 0x10, 0x40, 0x04, 0x04, 0x09, 0x21, 0x49, 0x40, 
	0xaa, 0x88, 0x4f, 0xf5, 0xfa, 0x05, 0x04, 0x04, 0x81, 0x00, 0x00, 0x80, 0x05, 0x50, 0xaa, 0x80, 
	0x10, 0x4b, 0x75, 0x5f, 0x54, 0x20, 0x10, 0x90, 0x04, 0x09, 0x20, 0x01, 0x00, 0xa1, 0x25, 0x40, 
	0x85, 0x20, 0x5b, 0x6a, 0xd0, 0x01, 0x00, 0x00, 0x20, 0x00, 0x02, 0x48, 0x40, 0x50, 0xaa, 0x50, 
	0x50, 0x4a, 0xad, 0xbd, 0xa2, 0x48, 0x42, 0x01, 0x08, 0x80, 0x00, 0x00, 0x0a, 0x02, 0xa9, 0x54, 
	0x05, 0x00, 0xdb, 0x6b, 0x48, 0x01, 0x08, 0x04, 0x22, 0x10, 0x10, 0x20, 0x00, 0x01, 0x25, 0x20, 
	0x90, 0x2a, 0x6d, 0xb6, 0x80, 0x00, 0x20, 0xa0, 0x00, 0x42, 0x42, 0x80, 0x80, 0x02, 0x94, 0x96, 
	0x02, 0x81, 0xb6, 0xdb, 0x42, 0x48, 0x82, 0x04, 0x95, 0x08, 0x00, 0x00, 0x00, 0x08, 0xaa, 0xa8, 
	0xa8, 0x28, 0xdb, 0x6d, 0x90, 0x00, 0x10, 0x10, 0x00, 0x20, 0x88, 0x48, 0x00, 0x02, 0x49, 0x25, 
	0x05, 0x45, 0x55, 0xb6, 0xc0, 0x01, 0x24, 0x81, 0x00, 0x00, 0x02, 0x00, 0x00, 0x45, 0x54, 0x90, 
	0x52, 0x22, 0xde, 0xdb, 0x69, 0x24, 0x00, 0x04, 0x10, 0x02, 0x20, 0x40, 0x00, 0x09, 0x22, 0x4a, 
	0x95, 0x49, 0x6a, 0xad, 0xa8, 0x00, 0x22, 0x50, 0x01, 0x00, 0x00, 0x00, 0x00, 0x14, 0x95, 0x24, 
	0x41, 0x25, 0x55, 0xd6, 0xb4, 0x80, 0x08, 0x00, 0x40, 0x10, 0x84, 0x20, 0x05, 0x45, 0x48, 0x92, 
	0x08, 0x02, 0xb6, 0xba, 0xd7, 0x54, 0x80, 0x00, 0x00, 0x00, 0x00, 0x85, 0x29, 0x29, 0x25, 0x24, 
	0x20, 0x12, 0xda, 0xab, 0x5a, 0xab, 0x69, 0x02, 0x04, 0x00, 0x00, 0x09, 0x14, 0xa4, 0x90, 0x89, 
	0x01, 0x02, 0xab, 0x55, 0x6a, 0xda, 0xa4, 0x20, 0x10, 0x40, 0x00, 0x0a, 0x82, 0x49, 0x24, 0x42, 
	0x4a, 0x5b, 0x55, 0x6d, 0xab, 0x55, 0xb0, 0x80, 0x40, 0x02, 0x20, 0x04, 0x29, 0x24, 0x42, 0x28, 
	0xb5, 0x6a, 0xb5, 0xaa, 0xad, 0x5a, 0xae, 0x09, 0x00, 0x00, 0x02, 0x22, 0x8a, 0x49, 0x14, 0x80, 
	0xaa, 0xaa, 0xd6, 0xaa, 0xb5, 0x6a, 0xa9, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xaa, 0xaa, 0xaa, 0xad, 0x55, 0x55, 0x55, 0x20, 0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 
	0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x55, 0x55, 0x55, 0x55, 0x55, 0x4a, 0xa4, 0x02, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 
	0xa9, 0x55, 0x55, 0x55, 0x49, 0x20, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x4a, 0x95, 0x54, 0xa9, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char epd_bitmap_LogoWhite[] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x07, 0xf8, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0f, 0xf8, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0f, 0xf8, 0x3f, 0xbe, 0x1f, 0xff, 0x3f, 0x9f, 0xe7, 0xf3, 0xfc, 0xfe, 0x71, 0x9f, 0xbf, 0x80, 
	0x1f, 0xf0, 0x7c, 0x1e, 0x1f, 0xff, 0x7f, 0x9f, 0xe7, 0xf3, 0xfc, 0xfe, 0x71, 0x9f, 0xbf, 0x80, 
	0x1f, 0xf0, 0x78, 0x1e, 0x1c, 0xe7, 0x71, 0xb8, 0xe0, 0x73, 0x1c, 0xce, 0x71, 0x9c, 0x03, 0x80, 
	0x1f, 0xf0, 0xe0, 0x3e, 0x1c, 0xe7, 0x7f, 0xb8, 0xe7, 0xf3, 0x1c, 0xfe, 0x71, 0x98, 0x3f, 0x80, 
	0x1f, 0xe1, 0xc0, 0xfe, 0x1c, 0xe7, 0x7f, 0xb8, 0xef, 0xf3, 0x1c, 0xfe, 0x71, 0x98, 0x7f, 0x80, 
	0x1f, 0xe3, 0x83, 0xfe, 0x1c, 0xe7, 0x70, 0x1f, 0xef, 0xf3, 0x1c, 0xe2, 0x7f, 0x98, 0x77, 0x80, 
	0x1f, 0xe2, 0x0f, 0xfe, 0x1c, 0xe7, 0x3f, 0x9f, 0xef, 0xf3, 0x1c, 0xfe, 0x7f, 0x98, 0x7f, 0x80, 
	0x1f, 0xe4, 0x3f, 0xfe, 0x08, 0x43, 0x1f, 0x00, 0xe3, 0x13, 0x08, 0x7c, 0x39, 0x88, 0x39, 0x00, 
	0x1f, 0xc9, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xdf, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xe0, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1e, 0x01, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1e, 0x7f, 0xe3, 0xfe, 0x03, 0xc1, 0xe0, 0x31, 0x83, 0xc0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xf0, 0xfc, 0x3e, 0x0f, 0xe7, 0xf3, 0xff, 0xef, 0xf7, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xed, 0x7f, 0xfe, 0x1f, 0xe0, 0x3b, 0xff, 0xee, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xff, 0xff, 0xfe, 0x1c, 0xe0, 0x7b, 0x1c, 0xee, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xff, 0xff, 0xfe, 0x1c, 0xe7, 0xfb, 0x1c, 0xef, 0xf7, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0x83, 0xff, 0xfe, 0x1c, 0xee, 0x3b, 0x1c, 0xee, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0x80, 0xff, 0xfe, 0x1f, 0xef, 0xfb, 0x1c, 0xef, 0xe7, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xf0, 0x3f, 0xfe, 0x0f, 0xe7, 0xfb, 0x1c, 0xe7, 0xe7, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xfe, 0x1f, 0xfe, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xff, 0x8f, 0xfe, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0f, 0xff, 0xe7, 0xfc, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x07, 0xff, 0xf3, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char fyf_logo[] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x18, 0xc0, 0x00, 0x01, 0x80, 0x10, 0x00, 0x06, 0x7d, 0xd8, 0xc0, 0x00, 0xe1, 0x60, 0x00, 
	0x0f, 0xff, 0xbf, 0xd3, 0x40, 0xf7, 0xf0, 0x00, 0x0f, 0x87, 0xb9, 0xff, 0xa0, 0x27, 0x80, 0x00, 
	0x0f, 0xff, 0xdf, 0x9d, 0xa0, 0x10, 0x00, 0x00, 0x0f, 0xff, 0xdf, 0xff, 0xa1, 0xec, 0x00, 0x00, 
	0x0b, 0xbc, 0xfb, 0xef, 0xa4, 0x01, 0x00, 0x00, 0x03, 0xdb, 0xf8, 0x6c, 0xa8, 0x00, 0x80, 0xc0, 
	0x07, 0xa1, 0x00, 0x01, 0xb3, 0x18, 0x47, 0xc0, 0x00, 0xc8, 0xe0, 0x00, 0x03, 0x18, 0x2b, 0xa0, 
	0x00, 0x00, 0x1b, 0x61, 0xc0, 0x00, 0x03, 0xa0, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0x00, 0xff, 0xf0, 
	0x00, 0x00, 0x1e, 0xff, 0xc0, 0x03, 0x6e, 0x78, 0x00, 0x00, 0x3b, 0xc8, 0x00, 0x33, 0x66, 0xe8, 
	0x00, 0x00, 0x25, 0x88, 0x1b, 0xff, 0x3c, 0x50, 0x00, 0x00, 0x00, 0xff, 0xfa, 0x3f, 0x39, 0xa0, 
	0x00, 0x00, 0x02, 0xc7, 0xdb, 0x9b, 0x04, 0x00, 0x00, 0x00, 0x02, 0xfb, 0x9b, 0xdc, 0xe0, 0x00, 
	0x00, 0x00, 0x02, 0xc3, 0xdb, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0xde, 0x00, 0x60, 0x00, 0x00, 
	0x00, 0x00, 0x01, 0x10, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


void setup() {
  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }

  
}

void loop() {

  display.clearDisplay();

  display.drawBitmap(0, 0, epd_bitmap_LogoWhite, 128, 32, WHITE);

  display.display();

  delay(5000);

  display.clearDisplay();

  display.drawBitmap(30, 0, fyf_logo, 64, 32, WHITE);

  display.display();

  delay(5000);
}
